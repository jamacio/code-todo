{"version":3,"file":"extension.js","mappings":"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","sources":["../external commonjs \"vscode\"",".././src/extension.js","../external node-commonjs \"readline\"","../external node-commonjs \"fs\"","../external node-commonjs \"path\"","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["module.exports = require(\"vscode\");","// © 2025 Jamácio Rocha - Licensed under Non-Commercial OSS\nconst vscode = require('vscode');\nconst path = require('path');\nconst fs = require('fs').promises;\nconst { createReadStream } = require('fs');\nconst readline = require('readline');\n\nconst TAGS = ['BUG', 'HACK', 'FIXME', 'TODO', 'XXX'];\nconst TAG_PATTERN = `\\\\b(${TAGS.join('|')})(?=\\\\s|:)[:]?\\\\s*(.*)`;\nconst CACHE_VERSION = 19;\nconst MAX_CONCURRENT_FILES = 100;\nconst DEBOUNCE_TIME = 25;\nconst ONE_WEEK_MS = 7 * 24 * 60 * 60 * 1000;\n\nclass UltimateTodoProvider {\n  constructor(context) {\n    this.context = context;\n    this.cache = new Map();\n    this.fileMap = new Map();\n    this.activeOperations = new Set();\n    this.processingQueue = new Set();\n    this.debounceTimer = null;\n    this.isInitialized = false;\n\n    this.decorationType = vscode.window.createTextEditorDecorationType({\n      overviewRulerColor: new vscode.ThemeColor('editorOverviewRuler.addedForeground'),\n      backgroundColor: 'rgba(255, 255, 255, 0.68)',\n      color: 'rgba(0, 0, 0, 0.68)',\n      border: '1px solid rgba(255, 255, 255, 0.68)',\n      borderRadius: '3px',\n      overviewRulerLane: vscode.OverviewRulerLane.Right,\n    });\n\n    this._onDidChange = new vscode.EventEmitter();\n    this.onDidChangeTreeData = this._onDidChange.event;\n\n    this.initialize().catch(error =>\n      vscode.window.showErrorMessage(`Initialization error: ${error.message}`)\n    );\n  }\n\n  async initialize() {\n    await this.loadCache();\n    this.refresh();\n    this.setupWatchers();\n    this.applyHighlightsToAllEditors();\n    await this.startBackgroundProcessing();\n  }\n\n  refresh() {\n    this._onDidChange.fire();\n  }\n\n  async startBackgroundProcessing() {\n    try {\n      const lastFullScan = await this.context.globalState.get('lastFullScanTimestamp', 0);\n      const now = Date.now();\n\n      if (now - lastFullScan > ONE_WEEK_MS) {\n        await this.performWeeklyScan(now);\n        await this.context.globalState.update('lastFullScanTimestamp', now);\n      }\n\n      const uris = await vscode.workspace.findFiles(\n        '**/*.{js,ts,jsx,tsx,php,py,java,cs,cpp,h,html,css,md,json}',\n        '**/{node_modules,vendor,dist,out,build,.git}/**'\n      );\n\n      this.updateFileList(uris);\n      this.isInitialized = true;\n    } catch (error) {\n      vscode.window.showErrorMessage(`Background processing failed: ${error.message}`);\n    }\n  }\n\n  async performWeeklyScan(timestamp) {\n    this.cache.clear();\n    this.fileMap.clear();\n    this.refresh();\n    await this.saveCache();\n  }\n\n  updateFileList(uris) {\n    const currentFiles = new Set(uris.map(uri => uri.fsPath));\n\n    Array.from(this.cache.keys()).forEach(filePath => {\n      if (!currentFiles.has(filePath)) {\n        this.handleFileDelete(vscode.Uri.file(filePath));\n      }\n    });\n\n    uris.forEach(uri => {\n      if (!this.cache.has(uri.fsPath)) {\n        this.queueProcessing(uri.fsPath, true);\n      }\n    });\n  }\n\n  setupWatchers() {\n    const watcher = vscode.workspace.createFileSystemWatcher('**/*');\n\n    this.context.subscriptions.push(\n      watcher,\n      watcher.onDidChange(uri => this.queueProcessing(uri.fsPath, true)),\n      watcher.onDidCreate(uri => this.queueProcessing(uri.fsPath, true)),\n      watcher.onDidDelete(uri => this.handleFileDelete(uri)),\n      vscode.window.onDidChangeActiveTextEditor(editor =>\n        this.applyHighlights(editor)\n      )\n    );\n  }\n\n  handleFileDelete(uri) {\n    const filePath = uri.fsPath;\n    this.fileMap.delete(filePath);\n    this.cache.delete(filePath);\n    this.updateView(true);\n    this.applyHighlightsToAllEditors();\n  }\n\n  queueProcessing(filePath, isPriority = false) {\n    if (!this.processingQueue.has(filePath)) {\n      this.processingQueue.add(filePath);\n      this.debounceProcess();\n    }\n  }\n\n  debounceProcess() {\n    clearTimeout(this.debounceTimer);\n    this.debounceTimer = setTimeout(() => this.processQueue(), DEBOUNCE_TIME);\n  }\n\n  async processQueue() {\n    if (!this.isInitialized) return;\n\n    while (this.processingQueue.size > 0) {\n      const batch = Array.from(this.processingQueue)\n        .slice(0, MAX_CONCURRENT_FILES);\n\n      this.processingQueue = new Set(\n        Array.from(this.processingQueue)\n          .slice(MAX_CONCURRENT_FILES)\n      );\n\n      await Promise.all(batch.map(filePath =>\n        this.processSingleFile(filePath)\n          .catch(error =>\n            console.error(`Error processing ${filePath}:`, error)\n          )\n      ));\n\n      this.updateView(true);\n    }\n  }\n\n  async processSingleFile(filePath) {\n    if (this.activeOperations.has(filePath)) return;\n    this.activeOperations.add(filePath);\n\n    try {\n      const stats = await fs.stat(filePath);\n      const cacheEntry = this.cache.get(filePath);\n\n      if (cacheEntry?.mtime === stats.mtimeMs) return;\n\n      const items = await this.parseFileStream(filePath);\n      this.updateFileData(filePath, items, stats.mtimeMs);\n      this.applyHighlightsForFile(filePath);\n    } catch (error) {\n      if (error.code === 'ENOENT') {\n        this.handleFileDelete(vscode.Uri.file(filePath));\n      } else {\n        console.error(`Error processing ${filePath}:`, error);\n      }\n    } finally {\n      this.activeOperations.delete(filePath);\n    }\n  }\n\n  applyHighlightsForFile(filePath) {\n    vscode.window.visibleTextEditors.forEach(editor => {\n      if (editor.document.uri.fsPath === filePath) {\n        this.applyHighlights(editor);\n      }\n    });\n  }\n\n  updateFileData(filePath, newItems, mtime) {\n    const itemsMap = new Map(newItems.map(item =>\n      [`${item.line}:${item.position}`, item]\n    ));\n    const mergedItems = Array.from(itemsMap.values());\n\n    if (mergedItems.length > 0) {\n      this.fileMap.set(filePath, mergedItems);\n      this.cache.set(filePath, { mtime, items: mergedItems });\n    } else {\n      this.fileMap.delete(filePath);\n      this.cache.delete(filePath);\n    }\n  }\n\n  async parseFileStream(filePath) {\n    return new Promise((resolve, reject) => {\n      const items = [];\n      const rl = readline.createInterface({\n        input: createReadStream(filePath, 'utf8'),\n        crlfDelay: Infinity\n      });\n\n      let lineNumber = 0;\n\n      rl.on('line', (line) => {\n        const matches = [...line.matchAll(new RegExp(TAG_PATTERN, 'g'))];\n\n        for (const match of matches) {\n          const [_, tag, comment] = match;\n          if (TAGS.includes(tag.toUpperCase())) {\n            items.push({\n              tag: tag.toUpperCase(),\n              text: comment.trim(),\n              line: lineNumber,\n              position: match.index,\n              file: filePath\n            });\n          }\n        }\n        lineNumber++;\n      });\n\n      rl.on('close', () => resolve(items));\n      rl.on('error', reject);\n    });\n  }\n\n  async loadCache() {\n    try {\n      const cacheData = await this.context.globalState.get(\n        `todoCache_v${CACHE_VERSION}`,\n        {}\n      );\n\n      Object.entries(cacheData).forEach(([path, entry]) => {\n        if (entry?.items) {\n          this.cache.set(path, entry);\n          this.fileMap.set(path, entry.items);\n        }\n      });\n    } catch (error) {\n      vscode.window.showErrorMessage(`Cache load failed: ${error.message}`);\n    }\n  }\n\n  async saveCache() {\n    try {\n      await this.context.globalState.update(\n        `todoCache_v${CACHE_VERSION}`,\n        Object.fromEntries(this.cache)\n      );\n    } catch (error) {\n      console.error('Cache save error:', error);\n    }\n  }\n\n  updateView(force = false) {\n    this.refresh();\n    if (force) this.saveCache();\n  }\n\n  applyHighlightsToAllEditors() {\n    vscode.window.visibleTextEditors.forEach(editor =>\n      this.applyHighlights(editor)\n    );\n  }\n\n  applyHighlights(editor) {\n    try {\n      if (!editor) return;\n      const uri = editor.document.uri.fsPath;\n      const items = this.fileMap.get(uri) || [];\n\n      const ranges = items\n        .filter(item => TAGS.includes(item.tag))\n        .map(item => new vscode.Range(\n          new vscode.Position(item.line, item.position),\n          new vscode.Position(item.line, item.position + item.tag.length)\n        ));\n\n      editor.setDecorations(this.decorationType, ranges);\n    } catch (error) {\n      console.error('Highlight error:', error);\n    }\n  }\n\n  getTreeItem(element) { return element; }\n\n  async getChildren(element) {\n    return element ? element.children : this.buildTreeStructure();\n  }\n\n  buildTreeStructure() {\n    const tree = [];\n    const workspaceRoot = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath;\n    if (!workspaceRoot) return tree;\n\n    this.fileMap.forEach((items, filePath) => {\n      if (!filePath.startsWith(workspaceRoot)) return;\n      const relativePath = path.relative(workspaceRoot, filePath);\n      let currentLevel = tree;\n\n      relativePath.split(path.sep).forEach((part, index) => {\n        let node = currentLevel.find(n => n.label === part);\n        if (!node) {\n          node = {\n            label: part,\n            children: [],\n            collapsibleState: vscode.TreeItemCollapsibleState.Collapsed,\n            path: path.join(\n              workspaceRoot,\n              ...relativePath.split(path.sep).slice(0, index + 1)\n            )\n          };\n          currentLevel.push(node);\n        }\n        currentLevel = node.children;\n      });\n\n      items.forEach(item => currentLevel.push({\n        label: `[${item.tag}] ${item.text}`,\n        description: `Line ${item.line + 1}`,\n        command: {\n          command: \"vscode.open\",\n          title: \"Open File\",\n          arguments: [\n            vscode.Uri.file(filePath),\n            { selection: new vscode.Range(item.line, 0, item.line, 0) }\n          ]\n        }\n      }));\n    });\n\n    return tree.sort((a, b) => a.label.localeCompare(b.label));\n  }\n}\n\nfunction activate(context) {\n  const provider = new UltimateTodoProvider(context);\n  context.subscriptions.push(\n    vscode.window.registerTreeDataProvider(\"todoTreeView\", provider),\n    vscode.commands.registerCommand(\"codeTODO.refresh\", () =>\n      provider.startBackgroundProcessing()\n    ),\n    { dispose: () => provider.saveCache() }\n  );\n  return provider;\n}\n\nfunction deactivate() { }\n\nmodule.exports = { activate, deactivate };","module.exports = require(\"readline\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(497);\n"],"names":["module","exports","require","vscode","path","fs","createReadStream","readline","TAGS","TAG_PATTERN","join","UltimateTodoProvider","constructor","context","this","cache","Map","fileMap","activeOperations","Set","processingQueue","debounceTimer","isInitialized","decorationType","window","createTextEditorDecorationType","overviewRulerColor","ThemeColor","backgroundColor","color","border","borderRadius","overviewRulerLane","OverviewRulerLane","Right","_onDidChange","EventEmitter","onDidChangeTreeData","event","initialize","catch","error","showErrorMessage","message","loadCache","refresh","setupWatchers","applyHighlightsToAllEditors","startBackgroundProcessing","fire","lastFullScan","globalState","get","now","Date","performWeeklyScan","update","uris","workspace","findFiles","updateFileList","timestamp","clear","saveCache","currentFiles","map","uri","fsPath","Array","from","keys","forEach","filePath","has","handleFileDelete","Uri","file","queueProcessing","watcher","createFileSystemWatcher","subscriptions","push","onDidChange","onDidCreate","onDidDelete","onDidChangeActiveTextEditor","editor","applyHighlights","delete","updateView","isPriority","add","debounceProcess","clearTimeout","setTimeout","processQueue","size","batch","slice","Promise","all","processSingleFile","console","stats","stat","cacheEntry","mtime","mtimeMs","items","parseFileStream","updateFileData","applyHighlightsForFile","code","visibleTextEditors","document","newItems","itemsMap","item","line","position","mergedItems","values","length","set","resolve","reject","rl","createInterface","input","crlfDelay","Infinity","lineNumber","on","matches","matchAll","RegExp","match","_","tag","comment","includes","toUpperCase","text","trim","index","cacheData","Object","entries","entry","fromEntries","force","ranges","filter","Range","Position","setDecorations","getTreeItem","element","getChildren","children","buildTreeStructure","tree","workspaceRoot","workspaceFolders","startsWith","relativePath","relative","currentLevel","split","sep","part","node","find","n","label","collapsibleState","TreeItemCollapsibleState","Collapsed","description","command","title","arguments","selection","sort","a","b","localeCompare","activate","provider","registerTreeDataProvider","commands","registerCommand","dispose","deactivate","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}