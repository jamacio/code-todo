{"version":3,"file":"extension.js","mappings":"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","sources":["../external commonjs \"vscode\"",".././src/extension.js","../external node-commonjs \"readline\"","../external node-commonjs \"fs\"","../external node-commonjs \"path\"","../webpack/bootstrap","../webpack/startup"],"sourcesContent":["module.exports = require(\"vscode\");","// © 2025 Jamácio Rocha - Licensed under Non-Commercial OSS\nconst vscode = require('vscode');\nconst path = require('path');\nconst fs = require('fs').promises;\nconst { createReadStream } = require('fs');\nconst readline = require('readline');\n\nconst TAGS = ['BUG', 'HACK', 'FIXME', 'TODO', 'XXX'];\nconst TAG_PATTERN = `\\\\b(${TAGS.join('|')})(?=\\\\s|:)[:]?\\\\s*(.*)`;\nconst CACHE_VERSION = 18;\nconst MAX_CONCURRENT_FILES = 100;\nconst DEBOUNCE_TIME = 25;\n\nclass UltimateTodoProvider {\n  constructor(context) {\n    this.context = context;\n    this.cache = new Map();\n    this.fileMap = new Map();\n    this.activeOperations = new Set();\n    this.processingQueue = new Set();\n    this.debounceTimer = null;\n    this.isInitialized = false;\n\n    this.decorationType = vscode.window.createTextEditorDecorationType({\n      overviewRulerColor: new vscode.ThemeColor('editorOverviewRuler.addedForeground'),\n      backgroundColor: 'rgba(255, 255, 255, 0.68)',\n      color: 'rgba(0, 0, 0, 0.68)',\n      border: '1px solid rgba(255, 255, 255, 0.68)',\n      borderRadius: '3px',\n      overviewRulerLane: vscode.OverviewRulerLane.Right,\n    });\n\n    this._onDidChange = new vscode.EventEmitter();\n    this.onDidChangeTreeData = this._onDidChange.event;\n\n    this.initialize();\n  }\n\n  async initialize() {\n    await this.loadCache();\n    this.refreshTree();\n    this.setupWatchers();\n    this.applyHighlightsToAllEditors();\n    this.startBackgroundProcessing();\n  }\n\n  async startBackgroundProcessing() {\n    try {\n      const uris = await vscode.workspace.findFiles(\n        '**/*.{js,ts,jsx,tsx,php,py,java,cs,cpp,h,html,css,md,json}',\n        '**/{node_modules,vendor,dist,out,build,.git}/**'\n      );\n      this.updateFileList(uris);\n      this.isInitialized = true;\n    } catch (error) {\n      vscode.window.showErrorMessage(`Initialization failed: ${error.message}`);\n    }\n  }\n\n  refreshTree() {\n    this._onDidChange.fire();\n  }\n\n  async updateFileList(uris) {\n    const currentFiles = new Set(uris.map(uri => uri.fsPath));\n    Array.from(this.cache.keys()).forEach(filePath => {\n      if (!currentFiles.has(filePath)) this.handleFileDelete(vscode.Uri.file(filePath));\n    });\n    uris.forEach(uri => !this.cache.has(uri.fsPath) && this.queueProcessing(uri.fsPath, true));\n  }\n\n  setupWatchers() {\n    const watcher = vscode.workspace.createFileSystemWatcher('**/*');\n    this.context.subscriptions.push(\n      watcher,\n      watcher.onDidChange(uri => this.queueProcessing(uri.fsPath, true)),\n      watcher.onDidCreate(uri => this.queueProcessing(uri.fsPath, true)),\n      watcher.onDidDelete(uri => this.handleFileDelete(uri)),\n      vscode.window.onDidChangeActiveTextEditor(editor => this.applyHighlights(editor))\n    );\n  }\n\n  handleFileDelete(uri) {\n    const filePath = uri.fsPath;\n    this.fileMap.delete(filePath);\n    this.cache.delete(filePath);\n    this.updateView(true);\n    this.applyHighlightsToAllEditors();\n  }\n\n  queueProcessing(filePath, isPriority = false) {\n    if (!this.processingQueue.has(filePath)) {\n      this.processingQueue.add(filePath);\n      this.debounceProcess();\n    }\n  }\n\n  debounceProcess() {\n    clearTimeout(this.debounceTimer);\n    this.debounceTimer = setTimeout(() => this.processQueue(), DEBOUNCE_TIME);\n  }\n\n  async processQueue() {\n    if (!this.isInitialized) return;\n    const batch = Array.from(this.processingQueue).slice(0, MAX_CONCURRENT_FILES);\n    this.processingQueue = new Set([...this.processingQueue].slice(MAX_CONCURRENT_FILES));\n\n    if (batch.length > 0) {\n      await Promise.all(batch.map(filePath =>\n        this.processSingleFile(filePath).catch(console.error)));\n      this.updateView(true);\n      this.debounceProcess();\n    }\n  }\n\n  async processSingleFile(filePath) {\n    if (this.activeOperations.has(filePath)) return;\n    this.activeOperations.add(filePath);\n\n    try {\n      const stats = await fs.stat(filePath);\n      const cacheEntry = this.cache.get(filePath);\n      if (cacheEntry?.mtime === stats.mtimeMs) return;\n\n      const items = await this.parseFileStream(filePath);\n      this.updateFileData(filePath, items, stats.mtimeMs);\n      this.applyHighlightsForFile(filePath);\n    } catch (error) {\n      error.code === 'ENOENT' && this.handleFileDelete(vscode.Uri.file(filePath));\n    } finally {\n      this.activeOperations.delete(filePath);\n    }\n  }\n\n  applyHighlightsForFile(filePath) {\n    vscode.window.visibleTextEditors.forEach(editor => {\n      editor.document.uri.fsPath === filePath && this.applyHighlights(editor);\n    });\n  }\n\n  updateFileData(filePath, newItems, mtime) {\n    const itemsMap = new Map(newItems.map(item => [`${item.line}:${item.position}`, item]));\n    const mergedItems = Array.from(itemsMap.values());\n\n    if (mergedItems.length > 0) {\n      this.fileMap.set(filePath, mergedItems);\n      this.cache.set(filePath, { mtime, items: mergedItems });\n    } else {\n      this.fileMap.delete(filePath);\n      this.cache.delete(filePath);\n    }\n  }\n\n  async parseFileStream(filePath) {\n    return new Promise((resolve, reject) => {\n      const items = [];\n      const rl = readline.createInterface({ input: createReadStream(filePath, 'utf8') });\n      let lineNumber = 0;\n\n      rl.on('line', line => {\n        [...line.matchAll(new RegExp(TAG_PATTERN, 'g'))].forEach(match => {\n          const [_, tag, comment] = match;\n          TAGS.includes(tag) && items.push({\n            tag, text: comment.trim(),\n            line: lineNumber,\n            position: match.index,\n            file: filePath\n          });\n        });\n        lineNumber++;\n      });\n\n      rl.on('close', () => resolve(items));\n      rl.on('error', reject);\n    });\n  }\n\n  async loadCache() {\n    try {\n      const cacheData = await this.context.globalState.get(`todoCache_v${CACHE_VERSION}`, {});\n      Object.entries(cacheData).forEach(([path, entry]) => {\n        if (entry?.items) {\n          this.cache.set(path, entry);\n          this.fileMap.set(path, entry.items);\n        }\n      });\n    } catch (error) {\n      vscode.window.showErrorMessage(`Cache load failed: ${error.message}`);\n    }\n  }\n\n  async saveCache() {\n    try {\n      await this.context.globalState.update(`todoCache_v${CACHE_VERSION}`, Object.fromEntries(this.cache));\n    } catch (error) {\n      console.error('Cache save error:', error);\n    }\n  }\n\n  updateView(force = false) {\n    this.refreshTree();\n    force && this.saveCache();\n  }\n\n  applyHighlightsToAllEditors() {\n    vscode.window.visibleTextEditors.forEach(editor => this.applyHighlights(editor));\n  }\n\n  applyHighlights(editor) {\n    try {\n      if (!editor) return;\n      const uri = editor.document.uri.fsPath;\n      const items = this.fileMap.get(uri) || [];\n\n      const ranges = items\n        .filter(item => TAGS.includes(item.tag) && item.tag === item.tag.toUpperCase())\n        .map(item => new vscode.Range(\n          new vscode.Position(item.line, item.position),\n          new vscode.Position(item.line, item.position + item.tag.length)\n        ));\n\n      editor.setDecorations(this.decorationType, ranges);\n    } catch (error) {\n      console.error('Highlight error:', error);\n    }\n  }\n\n  getTreeItem(element) { return element; }\n\n  async getChildren(element) {\n    return element ? element.children : this.buildTreeStructure();\n  }\n\n  buildTreeStructure() {\n    const tree = [];\n    const workspaceRoot = vscode.workspace.workspaceFolders?.[0]?.uri.fsPath;\n    if (!workspaceRoot) return tree;\n\n    this.fileMap.forEach((items, filePath) => {\n      if (!filePath.startsWith(workspaceRoot)) return;\n      const relativePath = path.relative(workspaceRoot, filePath);\n      let currentLevel = tree;\n\n      relativePath.split(path.sep).forEach((part, index) => {\n        let node = currentLevel.find(n => n.label === part);\n        if (!node) {\n          node = {\n            label: part,\n            children: [],\n            collapsibleState: vscode.TreeItemCollapsibleState.Collapsed,\n            path: path.join(workspaceRoot, ...relativePath.split(path.sep).slice(0, index + 1))\n          };\n          currentLevel.push(node);\n        }\n        currentLevel = node.children;\n      });\n\n      items.forEach(item => currentLevel.push({\n        label: `[${item.tag}] ${item.text}`,\n        description: `Line ${item.line + 1}`,\n        command: {\n          command: \"vscode.open\",\n          title: \"Open File\",\n          arguments: [\n            vscode.Uri.file(filePath),\n            { selection: new vscode.Range(item.line, 0, item.line, 0) }\n          ]\n        }\n      }));\n    });\n\n    return tree.sort((a, b) => a.label.localeCompare(b.label));\n  }\n}\n\nfunction activate(context) {\n  const provider = new UltimateTodoProvider(context);\n  context.subscriptions.push(\n    vscode.window.registerTreeDataProvider(\"todoTreeView\", provider),\n    vscode.commands.registerCommand(\"codeTODO.refresh\", () => provider.startBackgroundProcessing()),\n    { dispose: () => provider.saveCache() }\n  );\n  return provider;\n}\n\nfunction deactivate() { }\n\nmodule.exports = { activate, deactivate };","module.exports = require(\"readline\");","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(497);\n"],"names":["module","exports","require","vscode","path","fs","createReadStream","readline","TAGS","TAG_PATTERN","join","UltimateTodoProvider","constructor","context","this","cache","Map","fileMap","activeOperations","Set","processingQueue","debounceTimer","isInitialized","decorationType","window","createTextEditorDecorationType","overviewRulerColor","ThemeColor","backgroundColor","color","border","borderRadius","overviewRulerLane","OverviewRulerLane","Right","_onDidChange","EventEmitter","onDidChangeTreeData","event","initialize","loadCache","refreshTree","setupWatchers","applyHighlightsToAllEditors","startBackgroundProcessing","uris","workspace","findFiles","updateFileList","error","showErrorMessage","message","fire","currentFiles","map","uri","fsPath","Array","from","keys","forEach","filePath","has","handleFileDelete","Uri","file","queueProcessing","watcher","createFileSystemWatcher","subscriptions","push","onDidChange","onDidCreate","onDidDelete","onDidChangeActiveTextEditor","editor","applyHighlights","delete","updateView","isPriority","add","debounceProcess","clearTimeout","setTimeout","processQueue","batch","slice","length","Promise","all","processSingleFile","catch","console","stats","stat","cacheEntry","get","mtime","mtimeMs","items","parseFileStream","updateFileData","applyHighlightsForFile","code","visibleTextEditors","document","newItems","itemsMap","item","line","position","mergedItems","values","set","resolve","reject","rl","createInterface","input","lineNumber","on","matchAll","RegExp","match","_","tag","comment","includes","text","trim","index","cacheData","globalState","Object","entries","entry","saveCache","update","fromEntries","force","ranges","filter","toUpperCase","Range","Position","setDecorations","getTreeItem","element","getChildren","children","buildTreeStructure","tree","workspaceRoot","workspaceFolders","startsWith","relativePath","relative","currentLevel","split","sep","part","node","find","n","label","collapsibleState","TreeItemCollapsibleState","Collapsed","description","command","title","arguments","selection","sort","a","b","localeCompare","activate","provider","registerTreeDataProvider","commands","registerCommand","dispose","deactivate","__webpack_module_cache__","__webpack_exports__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__"],"sourceRoot":""}